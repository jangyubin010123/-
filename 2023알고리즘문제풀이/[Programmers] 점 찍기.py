# another thoughts : 어차피 x와 y에 대하여 이중반복문을 돌게 되면 문제에서 주어진 제한사항 때문에 시간초과 판정을 받을 것이 뻔하다. 따라서, 우리는 "원의 방정식"(-->> x**2 + y**2 == d**2)를 활용해야 한다..!!
# -->> 즉, 이중반복문을 사용할 필요 없이 x에 대하여 for문을 돌면서 반지름이 d인 원의 경계선에 해당하는 y값을 구하고 "int()" 처리를 해주면 그 값은 해당 x에 대하여 y가 가질 수 있는 최댓값이 될 것이다..!!
# -->> 즉, "int()" 처리를 한 y값에 (문제에서 입력으로 받을)k로 나눈 몫에 +1을 한 값이 해당 x에 대하여 y가 될 수 있는 총 갯수가 될 것이다..!!
# (여기서 "+1"을 해준 이유는 y==0일 때는 무조건 점을 찍을 수 있기 때문이다..!!)

# another solution

from math import sqrt

def solution(k, d):
    answer = 0
    for x in range(0, d + 1, k):
        y = sqrt(d**2 - x ** 2)
        y = int(y)
        answer += (1 + y // k)
    return answer
