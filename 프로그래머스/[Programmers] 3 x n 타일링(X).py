# my solution(X)

# another solution 

def solution(n):
    # 참고 > 우선 n이 홀수일 때는 경우의 수가 모두 0이라는 것을 쉽게 알 수 있습니다..!!
    # 이제, 남은 문제는 "점화식"을 올바르게 구하는 것입니다..!!
    answer = 0
    dp = [0] * (n + 1)
    dp[0] = 1 
    dp[2] = 3
    dp[4] = 11
    for i in range(6, n + 1):
        if i % 2 == 1:
            continue
        # 소스코드상에서 코드 복잡성을 줄이기 위해서 아래의 줄처럼 바꿔줬습니다..!!
        # 원래의 점화식은 이런 형태입니다..!!
        # -->> dp[i] = 3*dp[i-2] + 2*dp[i-2] + 2*dp[i-4] + .... + 2*dp[0]
        dp[i] = 4 * dp[i - 2] - dp[i - 4]
    answer = dp[n] % 1_000_000_007
    return answer

# my thoughts : 일반식 즉, "점화식"을 알맞게 찾는 것이 이 문제의 핵심입니다..!!
# About "점화식"
# 1. 일단 기본적으로 n 크기의 도형은 n-2 크기 도형에 총 3가지의 경우를 오른쪽에 붙이는 것으로 3 * dp[n-2]개가 있습니다..!!
# 2. 그리고 dp[n-4], dp[n-6], ...., dp[0]의 경우의 수에 대하여 문제에 있는 예시 그림 맨 아래쪽 2가지처럼 하는 경우가 있습니다..!!
# 3. 따라서, 우리는 점화식을 다음과 같이 유추할 수 있을 것입니다..!!
# -->> dp[i] = 3*dp[i-2] + 2*dp[i-2] + 2*dp[i-4] + .... + 2*dp[0]

# 참고 > 파이썬은 정수형이 수만 자리여도 연산을 해주니까 마지막에만 나머지를 취해도 됩니다..!!
